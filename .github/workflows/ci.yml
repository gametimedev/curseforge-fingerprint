name: Verify

on: [ push ]

env:
  LEFTHOOK: 0

jobs:
  verify:
    uses: meza/shared-github-workflows/.github/workflows/default-node-npm-ci.yml@main
    secrets:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
    with:
        test: false
        node-version: "latest"
        junit-report-path: "reports/junit.xml"
        cobertura-report-path: "reports/coverage/cobertura-coverage.xml"
  build:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    needs: [ verify ]
    if: needs.verify.outputs.new-release-published == 'true'
    name: Build binaries for ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up node
        uses: meza/action-setup-node-npm@main
        with:
          node-version: 16.16.0
          cache-name: ${{ needs.verify.outputs.cache-name }}
      - name: Use Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: 3.10
        env:
          PYTHON_VERSION: 3.10
      - name: Set Windows environment
        if: matrix.os == 'windows-latest'
        run: |
          echo 'GYP_MSVS_VERSION=2015' >> $Env:GITHUB_ENV
          echo 'GYP_MSVS_OVERRIDE_PATH=C:\\Dummy' >> $Env:GITHUB_ENV
      - name: Set version
        run: npm version --no-git-tag-version ${{ needs.verify.outputs.new-release-version }}
      - name: "Build"
        run: npm run build && npm run build:prebuilds
      - name: "Test"
        run: npm run test
      - uses: actions/upload-artifact@master
        with:
          name: prebuilds-${{ matrix.os }}
          path: prebuilds
  release:
    needs: [ verify, build ]
    if: needs.verify.outputs.new-release-published == 'true'
    name: Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up node
        uses: meza/action-setup-node-npm@main
        with:
          node-version: 16.16.0
          cache-name: ${{ needs.verify.outputs.cache-name }}
      - name: "Build"
        run: npm run build
      - uses: actions/download-artifact@master
        with:
          name: prebuilds-windows-latest
          path: prebuilds
      - uses: actions/download-artifact@master
        with:
          name: prebuilds-ubuntu-latest
          path: prebuilds
      - uses: actions/download-artifact@master
        with:
          name: prebuilds-macos-latest
          path: prebuilds
      - name: ðŸš€ Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: npm run release
